dependencies {
	compile "org.eclipse.xtext:org.eclipse.xtext:${xtextVersion}"
	compile "org.eclipse.xtext:org.eclipse.xtext.xbase:${xtextVersion}"
	compile "org.eclipse.platform:org.eclipse.core.resources"
}
configurations {
	mwe2 {
		extendsFrom compile
	}
}

// workaround for an Xtext Gradle plugin issue, see https://github.com/eclipse/xtext/issues/1976
configurations.all {
    resolutionStrategy { 
        eachDependency { DependencyResolveDetails details ->
            if (details.requested.group == 'org.eclipse.platform' && details.requested.name == 'org.eclipse.core.runtime') {
                details.useVersion "3.19.0"
            }
            if (details.requested.group == 'org.eclipse.platform' && details.requested.name == 'org.eclipse.equinox.common') {
                details.useVersion("3.13.0")
            }
        }
    }
}

dependencies {
	mwe2 'org.eclipse.emf:org.eclipse.emf.mwe2.launch'
	mwe2 "org.eclipse.xtext:org.eclipse.xtext.common.types:${xtextVersion}"
	mwe2 "org.eclipse.xtext:org.eclipse.xtext.xtext.generator:${xtextVersion}"
	mwe2 'org.eclipse.xtext:xtext-antlr-generator'
}

task generateXtextLanguage(type: JavaExec) {
	main = 'org.eclipse.emf.mwe2.launch.runtime.Mwe2Launcher'
	classpath = configurations.mwe2
	inputs.file "src/de/grammarcraft/epsilon/GenerateEpsilon.mwe2"
	inputs.file "src/de/grammarcraft/epsilon/Epsilon.xtext"
	outputs.dir "src-gen"
	args += "src/de/grammarcraft/epsilon/GenerateEpsilon.mwe2"
	args += "-p"
	args += "rootPath=/${projectDir}/.."
}

generateXtext.dependsOn(generateXtextLanguage)

clean.dependsOn(cleanGenerateXtextLanguage)
eclipse.classpath.plusConfigurations += [configurations.mwe2]
//this is an eclipse plugin project
eclipseClasspath.enabled=false
cleanEclipseClasspath.enabled=false
