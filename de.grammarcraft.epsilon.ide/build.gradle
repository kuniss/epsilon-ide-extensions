plugins {
	id 'com.github.johnrengelman.shadow' version '5.1.0'
}

dependencies {
	compile project(':de.grammarcraft.epsilon')
	compile "org.eclipse.xtext:org.eclipse.xtext.ide:${xtextVersion}"
	compile "org.eclipse.xtext:org.eclipse.xtext.xbase.ide:${xtextVersion}"
}

// workaround for an Xtext Gradle plugin issue, see https://github.com/eclipse/xtext/issues/1976
configurations.all {
    resolutionStrategy { 
        eachDependency { DependencyResolveDetails details ->
            if (details.requested.group == 'org.eclipse.platform' && details.requested.name == 'org.eclipse.core.runtime') {
                details.useVersion "3.19.0"
            }
            if (details.requested.group == 'org.eclipse.platform' && details.requested.name == 'org.eclipse.equinox.common') {
                details.useVersion("3.13.0")
            }
        }
    }
}

apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'
mainClassName = "org.eclipse.xtext.ide.server.ServerLauncher"

shadowJar {
	from(project.convention.getPlugin(JavaPluginConvention).sourceSets.main.output)
	configurations = [project.configurations.runtime]
	exclude('META-INF/INDEX.LIST', 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA','schema/*',
		'.options', '.api_description', '*.profile', '*.html', 'about.*', 'about_files/*',
		'plugin.xml', 'systembundle.properties', 'profile.list')
	classifier = 'ls'
	append('plugin.properties')
	
	with gammaNativeResources
}

//this is an eclipse plugin project
eclipseClasspath.enabled=false
cleanEclipseClasspath.enabled=false

task handoverToVSCodeExtension(type: Copy) {
	description = 'unzips the language server zip distribution for handing it over to the VS code extension building'
	dependsOn shadowDistZip
	
    from (zipTree(shadowDistZip.archiveFile)) {
    	// drop zip name root directory
	    eachFile { fcd ->
	    	fcd.relativePath = new RelativePath(true, fcd.relativePath.segments.drop(1))  
	    }
	    includeEmptyDirs = false
    }
    into '../de.grammarcraft.epsilon.vscode/server'
}