grammar de.grammarcraft.epsilon.Epsilon with org.eclipse.xtext.common.Terminals
	
generate epsilon "http://www.grammarcraft.de/epsilon/Epsilon"

Specification:
	{Specification} rules += ( MetaRule | HyperRule )*
;

// Meta grammar rules
MetaRule:
	name=ident ("*")? "=" metaExpr=MetaExpr "."
;
MetaExpr:
	alternatives+=MetaTerm ( "|" alternatives+=MetaTerm )*
;
MetaTerm:
	{MetaTerm} ( metaTerm+=MetaSymbol )* 
;
MetaSymbol:
	  {MetaNonterminal} ref=[MetaRule] 
	| {MetaTerminal} value=STRING 
;

// Hyper grammer rules
HyperRule:
	name=ident ("*")? (FormalParams)? ":" HyperExpr "."
;
HyperExpr:
	(FormalParams)? HyperTerm (ActualParams)?
	( "|" (FormalParams)? HyperTerm (ActualParams)? )*
;
HyperTerm:
	( HyperSymbol )* 
;
HyperSymbol:
	  ident (=> ActualParams)? // TODO tree rewriting needed here depending on formal affix params, see [DeWeKaKr] S.23, Erster Pass
	| STRING 
	| (ActualParams)? 
	  ( "(" | "[" | "{" ) HyperExpr ( ")" | "]" | "}" ) 
	  (FormalParams)? 
;

// Affix forms grammar rules
FormalParams:
	"<"   ("+" | "-" ) AffixForm ":" ident 
	( "," ("+" | "-" ) AffixForm ":" ident )* ">" 
;
ActualParams:
	"<" AffixForm ( "," AffixForm )* ">" 
;
AffixForm:
	( Affix )* 
;
Affix:
	  ("#")? ident (number)? 
	| STRING 
;

ident: ID ;
number: INT ;

@Override terminal ML_COMMENT : '(*' -> '*)';
@Override terminal SL_COMMENT : '!' !('\n'|'\r')* ('\r'? '\n')?;
