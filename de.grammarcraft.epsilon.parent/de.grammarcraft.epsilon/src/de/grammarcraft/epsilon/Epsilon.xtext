grammar de.grammarcraft.epsilon.Epsilon with org.eclipse.xtext.common.Terminals
	
generate epsilon "http://www.grammarcraft.de/epsilon/Epsilon"

Specification:
	{Specification} rules += ( MetaRule | HyperRule )*
;

// Meta grammar rules
MetaRule:
	name=ID isToken?=("*")? "=" metaExpr=MetaExpr "."
;
MetaExpr:
	alternatives+=MetaTerm ( "|" alternatives+=MetaTerm )*
;
MetaTerm:
	{MetaTerm} ( metaSymbols+=MetaSymbol )* 
;
MetaSymbol:
	  {MetaNonterminal} ref=[MetaRule] 
	| {MetaTerminal} value=STRING 
;

// Hyper grammar rules
HyperRule:
	name=ID isToken?=("*")? formalParams=(FormalParams)? ":" hyperExpr=HyperExpr "."
;
HyperExpr:
	alternatives+=HyperAlternative ( "|" alternatives+=HyperAlternative )*
;
HyperAlternative:
	{HyperAlternative} formalParams=(FormalParams)? hyperTerm=HyperTerm actualParams=(ActualParams)?
;
HyperTerm:
	{HyperTerm} ( hyperSymbols+=HyperSymbol )* 
;
enum EbnfOpeningBracket:
	PARENTHESIS="(" | SQUARE_BRACKET="[" | CURLY_BRACKET="{" 
;
enum EbnfClosingBracket:
	PARENTHESIS=")" | SQUARE_BRACKET="]" | CURLY_BRACKET="}" 
;
HyperSymbol:
	  {HyperNonterminal} ref=[HyperRule] (=> actualParams=ActualParams)? // TODO tree rewriting needed here depending on formal affix params, see [DeWeKaKr] S.23, Erster Pass
	| {HyperString} value=STRING 
	| {AynonymHyperNonterminal}
	  actualParams=(ActualParams)? 
	  openingBracket=EbnfOpeningBracket hyperExpr=HyperExpr closingBracket=EbnfClosingBracket 
	  formalParams=(FormalParams)? 
;

// Affix forms grammar rules
FormalParams:
	"<" list+=FormalParam ( "," list+=FormalParam )* ">" 
;
enum AffixDirection:
	OUT="+" | IN="-"
;
FormalParam:
	direction=AffixDirection affixForm=AffixForm (":" affixType=[MetaRule])?
;
ActualParams:
	"<" list+=AffixForm ( "," list+=AffixForm )* ">" 
;
AffixForm:
	{AffixForm} ( affixes+=Affix )* 
;
Affix:
	  {AffixVariable} isNegated?=("#")? ref=[MetaRule] affixNumber=(INT)? 
	| {AffixLiteral} value=STRING 
;

@Override terminal ML_COMMENT : '(*' -> '*)';
@Override terminal SL_COMMENT : '!' !('\n'|'\r')* ('\r'? '\n')?;
